Git & GitHub :

1. git is a version control tool by which we can track code changes history.
2. multiple developers can work on the same project simultaneously without overwriting each other's work.
3. every developer can make a copy of code(by creating own branch) in local and start work independently.
4. Collaboration, Backup and Restore, Track Changes, Branching.

Steps to start working with git:

1. Download visual studio code. (https://code.visualstudio.com/download)
2. Download git version control. (https://git-scm.com/downloads)
3. create github account. (https://github.com/)
4. create a repository on github.
5. clone that repository in local. ( git remote add origin https://github.com/neetitechhub/LocalRepo.git)

Now start working on code changes.

Git Command :

Clone and status :
    clone: git clone <path of your repository>
    status: git status
    cd: change directory(folder)
    ls: list of files in folder.
    ls-a: to see the all hidden files.

After code modifications we do follow two step.
     1. Add 2. Commit

Untracked file: means the file which is newly added and git has no idea about it.

Type of status:

(1) Untracked : new files that git does not tracked yet.
(2) modified : changed
(3) staged : file is ready to be committed
(4) unmodified : unchnaged

"Add" & "Commit" commands :

Add: adds new or changed files in your working directory to the git staging area.
git add <- file name ->

commit: it is the record of changed (it staged the changes means code are ready to puch into repository).

git commit -m "some  message" (m -> means message).

"git add" : This command means changes are staged (changes to be commited or ready to push on remot).
"git add ." : if you want to commit all changes then use this command.

Push Command : upload local repository content to remot repository.
git push origin main

mkdir :- for creating new directory.

Init Command:
Init-> used to create a new git repo.
git init
git remote add origin <- link->
git remote -V (to verify remote)
git branch (to check branch)
git branch -M mai  (to rename branch)
git push origin main
git push -u origin name: in that u use for set upstream.

git status : use to check the status of chages made.
git commit -m "message that you want to give"
git push -u origin main : pushing your code to remote server.

workflow
Localgit ->github repo->clone->changes->add->commit->Push

Branch Commands :
git branch (to check branch)
git branch -M main (To rename branch)
git checkout <-Branch Name-> (To navigate)
git checkout -b <-new branch name -> (To create new branch)
git branch -d <-branch name-> (To delete branch)

There are 2 ways for merge the branches:
git diff <-branch name-> (to compare commits, branches, files & more)
git merge <-branch name-> (to merge 2 branches)

Create a PR :

PR(Pull Request) -> it lets you tells others about changes you have pushed to a branch in a repository on github.
git pull Origin main : used to fetch and download content from a remote repo and immediatley update the local repo to match that content.

Resolving merge conflict: An event that takes place when git is unable to automatically resolve differnces in code between two commits.

Undoing Changes :

case 1 : Staged changes
git reset <-file name->
git reset

case 2 commited chnages (For one commit)
git reset HEAD ~ 1

case 3 : commited chnages (for many chnages)
git reset <-commit hash->
git reset --hard <-commit hash->

